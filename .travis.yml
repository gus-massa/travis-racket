language: c

env:
  global:
    # Supply a global RACKET_DIR environment variable. This is where
    # Racket will be installed. A good idea is to use ~/racket because
    # that doesn't require sudo to install.
    - RACKET_DIR=~/racket
  matrix:
    # Supply at least one RACKET_VERSION environment variable. This is
    # used by the install-racket.sh script (run at before_install,
    # below) to select the version of Racket to download and install.
    #
    # Supply more than one RACKET_VERSION (as in the example below) to
    # create a Travis-CI build matrix to test against multiple Racket
    # versions.
    - RACKET_VERSION=6.1
    - RACKET_VERSION=6.1.1
    - RACKET_VERSION=6.2
    - RACKET_VERSION=6.3
    - RACKET_VERSION=6.4
    - RACKET_VERSION=6.5
    - RACKET_VERSION=6.6
    - RACKET_VERSION=6.7
    - RACKET_VERSION=6.8
    - RACKET_VERSION=6.9
    - RACKET_VERSION=6.10
    - RACKET_VERSION=6.11
    - RACKET_VERSION=6.12
    - RACKET_VERSION=7.0
    - RACKET_VERSION=7.1
    # The next three are developers version, that may have bugs that
    # should (hopefully) be fixed before the official versions are
    # published. So they may fall unexpectedly.
    #
    # "HEAD" is a daily snapshot built from the `master` branch, for
    # the variant of Racket that uses its own runtime. This is the 
    # base for the next Racket version.
    - RACKET_VERSION=HEAD
    # "HEADCS" is a daily snapshot build from the `master` branch, for
    # the experimental variant of Racket that uses Chez Scheme.
    # This may have some minor incompatibilities.
    # It will eventually become the main Racket version.
    - RACKET_VERSION=HEADCS
    # "RELEASE" is a release candidate build that the Racket team
    # updates only in the weeks before a new release. Thereafter the
    # final release candidate remains frozen for a few month until the
    # next release period.
    # See <https://pre-release.racket-lang.org/installers/>.
    - RACKET_VERSION=RELEASE

# You may want to test against certain versions of Racket, without
# having them count against the overall success/failure.
matrix:
  allow_failures:
    - env: RACKET_VERSION=HEAD
    - env: RACKET_VERSION=HEADCS
    - env: RACKET_VERSION=RELEASE
  # Fast finish: Overall build result is determined as soon as any of
  # its rows have failed, or, all of its rows that aren't allowed to
  # fail have succeeded.
  fast_finish: true


before_install:
  - git clone https://github.com/greghendershott/travis-racket.git
  - cat travis-racket/install-racket.sh | bash # pipe to bash not sh!
  - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us

install:

before_script:

# Here supply steps such as raco make, raco test, etc.
script:
  - raco make main.rkt
  - raco test -x .

# OR: If your repo is a Racket package with an info.rkt that includes
# some `deps`:
#
# script:
# - raco pkg install --deps search-auto
# - raco setup -D --check-pkg-deps <your-package-name>
# - raco test -x -p <your-package-name>

after_script:
